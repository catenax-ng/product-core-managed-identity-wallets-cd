auth:
  jwksUrl: "https://centralidp.dev.demo.catena-x.net/auth/realms/CX-Central/protocol/openid-connect/certs"
  issuerUrl: "https://centralidp.dev.demo.catena-x.net/auth/realms/CX-Central"
  redirectUrl: "https://managed-identity-wallets.dev.demo.catena-x.net/callback"
  realm: "CX-Central"
  role: "add_wallets"
  roleMappings: "create_wallets:add_wallets,view_wallets:view_wallets,update_wallets:update_wallets,delete_wallets:delete_wallets,view_wallet:view_wallet,update_wallet:update_wallet"
  resourceId: "Cl5-CX-Custodian"
datapoolUrl: "https://catenax-bpdm-dev.demo.catena-x.net"
datapool:
  url: "https://catenax-bpdm-dev.demo.catena-x.net"
  authUrl: "https://centralidp.dev.demo.catena-x.net/auth/realms/CX-Central/protocol/openid-connect/token"
image:
  registry: "ghcr.io"
  tag: "latest-develop"
revocation:
  revocationServiceUrl: http://localhost:8086
  refreshHour: "3"
revocationService:
  port: "8086"
  httpAccessLog: true
  baseUrlForCredentialList: "https://managed-identity-wallets.dev.demo.catena-x.net/api/credentials/"
  minIssueInterval: "2"
  clientIssuanceApiUrl: "${SSI_SERVICE_URL:-http://localhost:8080}"
acapy:
  logLevel: "DEBUG"
  ledgerUrl: "http://dev.greenlight.bcovrin.vonx.io"
  endpointPort: "8000"
  endpointUrl: "https://managed-identity-wallets.dev.demo.catena-x.net:8000/"
  adminPort: "11000"
  adminUrl: "http://localhost:11000"
  secret:
    name: "catenax-managed-identity-wallets-acapy-secrets"
    path: "managed-identity-wallets/data/dev/catenax-managed-identity-wallets-acapy-secrets"
certificate:
  host: "managed-identity-wallets.dev.demo.catena-x.net"
managedIdentityWallets:
  secret:
    name: "catenax-managed-identity-wallets-secrets"
    path: "managed-identity-wallets/data/dev/catenax-managed-identity-wallets-secrets"
postgresql:
  secret:
    name: "product-managed-identity-wallets-postgresql"
    path: "managed-identity-wallets/data/dev/postgres-managed-identity-wallets-secret-config"
  primary:
    extraVolumeMounts:
      - name: initdb
        mountPath: "/docker-entrypoint-initdb.d"
    extraVolumes:
      - name: initdb
        emptyDir: {}
    initContainers:
      - name: initdb
        image: ghcr.io/catenax-ng/product-core-managed-identity-wallets-cd_initdb:latest
        imagePullPolicy: Always
        command:
          - sh
        args:
          - -c
          - |
            echo "Copying initdb sqls..."
            cp -R /initdb/* /docker-entrypoint-initdb.d
        volumeMounts:
        - name: initdb
          mountPath: "/docker-entrypoint-initdb.d"
acapypostgresql:
  secret:
    name: "product-managed-identity-wallets-acapy-postgresql"
    path: "managed-identity-wallets/data/dev/postgres-acapy-secret-config"